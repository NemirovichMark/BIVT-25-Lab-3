using System;
using System.Collections.Generic;
using System.Linq;

namespace Lab3
{
    public class Blue
    {
        private List<double> task1Values = new() { 27.5, 32.5, 30, 22.3, 26.8, 36.6, 30, 29.9, 20.1, 28.5 };
        private List<double> task2Values = new() { 1.2, 1.7, 0, 0, 4.5, 0, -1, 1.5, -0.5, -0.5, 0.2, 0.7, 2, 0, 0.5, 0.5, -1, 1.5, 0.5, 0.1 };
        private List<int> task3Values = new() { 3, 4, 2, 2, 5, 4, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 2, 5, 4, 3, 3, 4, 5, 2, 2, 3, 4, 5, 5, 4, 3, 4, 4, 5, 4, 5, 3, 4 };
        private List<int> task4Values = new() { 125, 120, 125, 115, 117, 121, 122, 120, 120, 117, 126, 135, 130, 132, 133 };

        public double Task1(int n, int glass, int norma)
        {
            double milk = 0;
            milk = n * 0.12;
            return milk;
        }

        public (int first, int second, int third, int fourth) Task2(int n)
{
    int first = 0, second = 0, third = 0, fourth = 0;

    for (int i = 0; i < n * 2 && i + 1 < task2Values.Count; i += 2)
    {
        double x = task2Values[i];
        double y = task2Values[i + 1];

        if (x == 0 || y == 0)
            continue; // точки на осях не считаем

        if (x > 0 && y > 0) first++;
        else if (x < 0 && y > 0) second++;
        else if (x < 0 && y < 0) third++;
        else if (x > 0 && y < 0) fourth++;
    }

    return (first, second, third, fourth);
}

        public int Task3(int n)
        {
            int count = task3Values.Take(n).Count(x => x == 5);
            return count;
        }

        public (int tasks, int serias) Task4(int time, int tasks)
        {
            int serias = 0;

            if (time > 0)
            {
                serias = time / 100;
            }
            else if (tasks > 0)
            {
                tasks = 12;
                serias = 0;
            }
            else
            {
                serias = 12;
            }

            return (tasks, serias);
        }

        public (int power, int agility, int intellect) Task5(int power, int agility, int intellect, int number)
        {
            // предположим, что каждое число добавляет +1 к характеристике по номеру
            switch (number)
            {
                case 1: power++; break;
                case 2: agility++; break;
                case 3: intellect++; break;
            }

            return (power, agility, intellect);
        }
    }
}
